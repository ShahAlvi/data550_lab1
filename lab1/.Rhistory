samplenumber <- factor(rep(1:(k * I), each = n/I))
simdataframe <- data.frame(simsamples, samplenumber)
simmeans <- aggregate(simsamples ~ samplenumber, data = simdataframe,
FUN=mean)$simsamples
hist(simmeans, xlim=range(c(simmeans, means)),
xlab="Simulated treatment averages", main = "", cex.lab = .8)
points(means, rep(0, length(means)), cex = 1.5, col = color[1:length(means)],
pch = 14+1:length(means))
legend("topleft", legend= c(paste("average", unique(dataset[, 2]))),
pch = 14+1:length(means), col=color[1:length(means)], cex=.75)
}
# install.packages("MPV", repos = "http://cran.us.r-project.org")
# library(MPV)
airplane = read.table("airplane.txt", header = TRUE)
airplane$size = as.factor(airplane$size)
plane.lm = lm(distance ~ size, data = airplane)
anova(plane.lm)
GRAPHICALANOVA(airplane)
library("RMariaDB")
con <- dbConnect(RMariaDB::MariaDB(), user='rlawrenc', password='test',
dbname='tpch', host='cosc304.ok.ubc.ca')
# List database tables
dbListTables(con)
# Execute a query
res <- dbGetQuery(con, "SELECT * FROM emp")
# Disconnect
dbDisconnect(con)
library("RMariaDB")
con <- dbConnect(RMariaDB::MariaDB(), user='rlawrenc', password='test',
dbname='tpch', host='cosc304.ok.ubc.ca')
# List database tables
dbListTables(con)
# Execute a query
res <- dbGetQuery(con, "SELECT * FROM orders LIMIT 5")
# Disconnect
dbDisconnect(con)
library("RMariaDB")
con <- dbConnect(RMariaDB::MariaDB(), user='rlawrenc', password='test',
dbname='tpch', host='cosc304.ok.ubc.ca')
# List database tables
dbListTables(con)
# Execute a query
res <- dbGetQuery(con, "SELECT * FROM orders LIMIT 5")
res
# Disconnect
dbDisconnect(con)
head(res,10)
library("RMariaDB")
con <- dbConnect(RMariaDB::MariaDB(), user='rlawrenc', password='test',
dbname='tpch', host='cosc304.ok.ubc.ca')
# List database tables
dbListTables(con)
# Execute a query
res <- dbGetQuery(con, "SELECT  ps_partkey, ps_suppkey, ps_availqty,year(l_shipdate) as "year", sum(l_quantity) as shippedQuantity
from partsupp join lineitem l on ps_partkey = l_partkey AND ps_suppkey = l_suppkey
GROUP BY ps_partkey,ps_suppkey,ps_availqty,year(l_shipdate)
ORDER BY  ps_partkey, ps_suppkey, "year";")
head(res,10)
# Disconnect
dbDisconnect(con)
library("RMariaDB")
con <- dbConnect(RMariaDB::MariaDB(), user='rlawrenc', password='test',
dbname='tpch', host='cosc304.ok.ubc.ca')
# List database tables
dbListTables(con)
# Execute a query
res <- dbGetQuery(con, "SELECT  ps_partkey, ps_suppkey, ps_availqty,year(l_shipdate) as "year", sum(l_quantity) as shippedQuantity
from partsupp join lineitem l on ps_partkey = l_partkey AND ps_suppkey = l_suppkey
GROUP BY ps_partkey,ps_suppkey,ps_availqty,year(l_shipdate)
ORDER BY  ps_partkey, ps_suppkey, year(l_shipdate);")
head(res,10)
# Disconnect
dbDisconnect(con)
library("RMariaDB")
con <- dbConnect(RMariaDB::MariaDB(), user='rlawrenc', password='test',
dbname='tpch', host='cosc304.ok.ubc.ca')
# List database tables
dbListTables(con)
# Execute a query
res <- dbGetQuery(con, "SELECT  ps_partkey, ps_suppkey, ps_availqty,year(l_shipdate) as \"year\", sum(l_quantity) as shippedQuantity
from partsupp join lineitem l on ps_partkey = l_partkey AND ps_suppkey = l_suppkey
GROUP BY ps_partkey,ps_suppkey,ps_availqty,year(l_shipdate)
ORDER BY  ps_partkey, ps_suppkey, year(l_shipdate);")
head(res,10)
# Disconnect
dbDisconnect(con)
#data <- dbGetQuery(con,"SELECT * FROM p")
#data
# Disconnect
dbDisconnect(con)
dbWriteTable(con2, "test", res)
library("RMariaDB")
con <- dbConnect(RMariaDB::MariaDB(), user='rlawrenc', password='test',
dbname='tpch', host='cosc304.ok.ubc.ca')
# List database tables
dbListTables(con)
# Execute a query
res <- dbGetQuery(con, "SELECT  ps_partkey, ps_suppkey, ps_availqty,year(l_shipdate) as \"year\", sum(l_quantity) as shippedQuantity
from partsupp join lineitem l on ps_partkey = l_partkey AND ps_suppkey = l_suppkey
GROUP BY ps_partkey,ps_suppkey,ps_availqty,year(l_shipdate)
ORDER BY  ps_partkey, ps_suppkey, year(l_shipdate);")
head(res,10)
# Disconnect
dbDisconnect(con)
library("RSQLite")
library("DBI")
con2 <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con2, "test", res)
#data <- dbGetQuery(con,"SELECT * FROM p")
#data
# Disconnect
dbDisconnect(con2)
library("RMariaDB")
con <- dbConnect(RMariaDB::MariaDB(), user='rlawrenc', password='test',
dbname='tpch', host='cosc304.ok.ubc.ca')
# List database tables
dbListTables(con)
# Execute a query
res <- dbGetQuery(con, "SELECT  ps_partkey, ps_suppkey, ps_availqty,year(l_shipdate) as \"year\", sum(l_quantity) as shippedQuantity
from partsupp join lineitem l on ps_partkey = l_partkey AND ps_suppkey = l_suppkey
GROUP BY ps_partkey,ps_suppkey,ps_availqty,year(l_shipdate)
ORDER BY  ps_partkey, ps_suppkey, year(l_shipdate);")
head(res,10)
# Disconnect
dbDisconnect(con)
library("RSQLite")
library("DBI")
con2 <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con2, "Inventory", res)
data <- dbGetQuery(con2,"SELECT * FROM Inventory WHERE year = '2018' and shippedQuantity > ps_availqty")
head(data,5)
# Disconnect
dbDisconnect(con2)
library("RMariaDB")
con <- dbConnect(RMariaDB::MariaDB(), user='rlawrenc', password='test',
dbname='tpch', host='cosc304.ok.ubc.ca')
# List database tables
dbListTables(con)
# Execute a query
res <- dbGetQuery(con, "SELECT  ps_partkey, ps_suppkey, ps_availqty,year(l_shipdate) as \"year\", sum(l_quantity) as shippedQuantity
from partsupp join lineitem l on ps_partkey = l_partkey AND ps_suppkey = l_suppkey
GROUP BY ps_partkey,ps_suppkey,ps_availqty,year(l_shipdate)
ORDER BY  ps_partkey, ps_suppkey, year(l_shipdate);")
head(res,10)
# Disconnect
dbDisconnect(con)
library("RSQLite")
library("DBI")
con2 <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con2, "Inventory", res)
data <- dbGetQuery(con2,"SELECT * FROM Inventory WHERE year = '2018' and shippedQuantity > ps_availqty")
head(data,5)
dataL<-dbGetQuery(con2, "SELECT shippedQuantity FROM Inventory WHERE ps_partkey=217 and ps_suppkey=18 ORDER BY Year")
lm(dataL$shippedQuantity ~ dataL$year)
# Disconnect
dbDisconnect(con2)
library("RMariaDB")
con <- dbConnect(RMariaDB::MariaDB(), user='rlawrenc', password='test',
dbname='tpch', host='cosc304.ok.ubc.ca')
# List database tables
dbListTables(con)
# Execute a query
res <- dbGetQuery(con, "SELECT  ps_partkey, ps_suppkey, ps_availqty,year(l_shipdate) as \"year\", sum(l_quantity) as shippedQuantity
from partsupp join lineitem l on ps_partkey = l_partkey AND ps_suppkey = l_suppkey
GROUP BY ps_partkey,ps_suppkey,ps_availqty,year(l_shipdate)
ORDER BY  ps_partkey, ps_suppkey, year(l_shipdate);")
head(res,10)
# Disconnect
dbDisconnect(con)
library("RSQLite")
library("DBI")
con2 <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con2, "Inventory", res)
data <- dbGetQuery(con2,"SELECT * FROM Inventory WHERE year = '2018' and shippedQuantity > ps_availqty")
head(data,5)
dataL<-dbGetQuery(con2, "SELECT shippedQuantity FROM Inventory WHERE ps_partkey=217 and ps_suppkey=18 ORDER BY Year")
lm(dataL$shippedQuantity ~ int(dataL$year))
# Disconnect
dbDisconnect(con2)
library("RMariaDB")
con <- dbConnect(RMariaDB::MariaDB(), user='rlawrenc', password='test',
dbname='tpch', host='cosc304.ok.ubc.ca')
# List database tables
dbListTables(con)
# Execute a query
res <- dbGetQuery(con, "SELECT  ps_partkey, ps_suppkey, ps_availqty,year(l_shipdate) as \"year\", sum(l_quantity) as shippedQuantity
from partsupp join lineitem l on ps_partkey = l_partkey AND ps_suppkey = l_suppkey
GROUP BY ps_partkey,ps_suppkey,ps_availqty,year(l_shipdate)
ORDER BY  ps_partkey, ps_suppkey, year(l_shipdate);")
head(res,10)
# Disconnect
dbDisconnect(con)
library("RSQLite")
library("DBI")
con2 <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con2, "Inventory", res)
data <- dbGetQuery(con2,"SELECT * FROM Inventory WHERE year = '2018' and shippedQuantity > ps_availqty")
head(data,5)
dataL<-dbGetQuery(con2, "SELECT shippedQuantity FROM Inventory WHERE ps_partkey=217 and ps_suppkey=18 ORDER BY Year")
year = as.integer(dataL$year)
lm(dataL$shippedQuantity ~ year)
# Disconnect
dbDisconnect(con2)
library("RMariaDB")
con <- dbConnect(RMariaDB::MariaDB(), user='rlawrenc', password='test',
dbname='tpch', host='cosc304.ok.ubc.ca')
# List database tables
dbListTables(con)
# Execute a query
res <- dbGetQuery(con, "SELECT  ps_partkey, ps_suppkey, ps_availqty,year(l_shipdate) as \"year\", sum(l_quantity) as shippedQuantity
from partsupp join lineitem l on ps_partkey = l_partkey AND ps_suppkey = l_suppkey
GROUP BY ps_partkey,ps_suppkey,ps_availqty,year(l_shipdate)
ORDER BY  ps_partkey, ps_suppkey, year(l_shipdate);")
head(res,10)
# Disconnect
dbDisconnect(con)
library("RSQLite")
library("DBI")
con2 <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con2, "Inventory", res)
data <- dbGetQuery(con2,"SELECT * FROM Inventory WHERE year = '2018' and shippedQuantity > ps_availqty")
head(data,5)
dataL<-dbGetQuery(con2, "SELECT shippedQuantity FROM Inventory WHERE ps_partkey=217 and ps_suppkey=18 ORDER BY Year")
year = as.integer(dataL$year)
lm(year ~ dataL$shippedQuantity)
# Disconnect
dbDisconnect(con2)
library("RMariaDB")
con <- dbConnect(RMariaDB::MariaDB(), user='rlawrenc', password='test',
dbname='tpch', host='cosc304.ok.ubc.ca')
# List database tables
dbListTables(con)
# Execute a query
res <- dbGetQuery(con, "SELECT  ps_partkey, ps_suppkey, ps_availqty,year(l_shipdate) as \"year\", sum(l_quantity) as shippedQuantity
from partsupp join lineitem l on ps_partkey = l_partkey AND ps_suppkey = l_suppkey
GROUP BY ps_partkey,ps_suppkey,ps_availqty,year(l_shipdate)
ORDER BY  ps_partkey, ps_suppkey, year(l_shipdate);")
head(res,10)
# Disconnect
dbDisconnect(con)
library("RSQLite")
library("DBI")
con2 <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con2, "Inventory", res)
data <- dbGetQuery(con2,"SELECT * FROM Inventory WHERE year = '2018' and shippedQuantity > ps_availqty")
head(data,5)
dataL<-dbGetQuery(con2, "SELECT shippedQuantity FROM Inventory WHERE ps_partkey=217 and ps_suppkey=18 ORDER BY Year")
year = as.integer(dataL$year)
lm(shippedQuantity~year, data = dataL)
# Disconnect
dbDisconnect(con2)
library("RSQLite")
library("DBI")
con2 <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con2, "Inventory", res)
data <- dbGetQuery(con2,"SELECT * FROM Inventory WHERE year = '2018' and shippedQuantity > ps_availqty")
head(data,5)
dataL<-dbGetQuery(con2, "SELECT shippedQuantity FROM Inventory WHERE ps_partkey=217 and ps_suppkey=18 ORDER BY Year")
dataL$year = as.integer(dataL$year)
lm(shippedQuantity~year, data = dataL)
library("RSQLite")
library("DBI")
con2 <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con2, "Inventory", res)
data <- dbGetQuery(con2,"SELECT * FROM Inventory WHERE year = '2018' and shippedQuantity > ps_availqty")
head(data,5)
dataL<-dbGetQuery(con2, "SELECT shippedQuantity FROM Inventory WHERE ps_partkey=217 and ps_suppkey=18 ORDER BY Year")
dataL$year = as.integer(dataL$year)
lm(dataL$shippedQuantity~dataL$year)
# Disconnect
dbDisconnect(con2)
head(dataL,5)
library("RMariaDB")
con <- dbConnect(RMariaDB::MariaDB(), user='rlawrenc', password='test',
dbname='tpch', host='cosc304.ok.ubc.ca')
# List database tables
dbListTables(con)
# Execute a query
res <- dbGetQuery(con, "SELECT  ps_partkey, ps_suppkey, ps_availqty,year(l_shipdate) as \"year\", sum(l_quantity) as shippedQuantity
from partsupp join lineitem l on ps_partkey = l_partkey AND ps_suppkey = l_suppkey
GROUP BY ps_partkey,ps_suppkey,ps_availqty,year(l_shipdate)
ORDER BY  ps_partkey, ps_suppkey, year(l_shipdate);")
head(res,10)
# Disconnect
dbDisconnect(con)
library("RSQLite")
library("DBI")
con2 <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con2, "Inventory", res)
data <- dbGetQuery(con2,"SELECT * FROM Inventory WHERE year = '2018' and shippedQuantity > ps_availqty")
head(data,5)
dataL<-dbGetQuery(con2, "SELECT Year, shippedQuantity FROM Inventory WHERE ps_partkey=217 and ps_suppkey=18 ORDER BY Year")
dataL$year = as.integer(dataL$year)
lm(dataL$shippedQuantity~dataL$year)
# Disconnect
dbDisconnect(con2)
library("RSQLite")
library("DBI")
con2 <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con2, "Inventory", res)
data <- dbGetQuery(con2,"SELECT * FROM Inventory WHERE year = '2018' and shippedQuantity > ps_availqty")
head(data,5)
dataL<-dbGetQuery(con2, "SELECT Year, shippedQuantity FROM Inventory WHERE ps_partkey=217 and ps_suppkey=18 ORDER BY Year")
#dataL$year = as.integer(dataL$year)
lm(dataL$shippedQuantity~dataL$year)
#dataL$year = as.integer(dataL$year)
lm(dataL$year ~ dataL$shippedQuantity)
predict(a)
a<-lm(dataL$shippedQuantity ~ dataL$year)
predict(a)
predict(a,2019)
a<-lm(dataL$shippedQuantity ~ dataL$year)
df<-data.frame(year=c(2019))
predict(a,df)
a<-lm(dataL$shippedQuantity ~ dataL$year)
df<-data.frame(year=c(2019))
predict(a, newdata = df)
summary(a)
dataL<-dbGetQuery(con2, "SELECT Year, shippedQuantity FROM Inventory WHERE ps_partkey=217 and ps_suppkey=18 ORDER BY Year")
#dataL$year = as.integer(dataL$year)
a<-lm(shippedQuantity ~ year, data = dataL)
summary(a)
df<-data.frame(year=c(2019))
predict(a, newdata = df)
dataL<-dbGetQuery(con2, "SELECT Year, shippedQuantity FROM Inventory WHERE ps_partkey=217 and ps_suppkey=18 ORDER BY Year")
#dataL$year = as.integer(dataL$year)
a<-lm(shippedQuantity ~ year, data = dataL)
summary(a)
df<-data.frame(year=c(2019))
predict(a, newdata = df)
overStock<-dbGetQuery(con2,"SELECT *, (ps_availqty-shippedQuantity)/ps_availqty as percentageOverstocked FROM Inventory WHERE shippedQuantity>=6 ORDER BY percentageOverstocked DESC"
head(overStock,10)
summary(a)
df<-data.frame(year=c(2019))
predict(a, newdata = df)
overStock<-dbGetQuery(con2,"SELECT ps_partkey,ps_suppkey,ps_availqty,year,shippedQuantity,(ps_availqty-shippedQuantity)/ps_availqty as percentageOverstocked FROM Inventory WHERE shippedQuantity>=6 ORDER BY percentageOverstocked DESC"
head(overStock,10)
a<-lm(shippedQuantity ~ year, data = dataL)
summary(a)
df<-data.frame(year=c(2019))
predict(a, newdata = df)
overStock<-dbGetQuery(con2,"SELECT ps_partkey,ps_suppkey,ps_availqty,year,shippedQuantity,((ps_availqty-shippedQuantity)/ps_availqty) as percentageOverstocked FROM Inventory WHERE shippedQuantity>=6 ORDER BY percentageOverstocked DESC")
head(overStock,10)
a<-lm(shippedQuantity ~ year, data = dataL)
summary(a)
df<-data.frame(year=c(2019))
predict(a, newdata = df)
overStock<-dbGetQuery(con2,"SELECT ps_partkey,ps_suppkey,ps_availqty,year,shippedQuantity,((ps_availqty-shippedQuantity)/shippedQuantity) as percentageOverstocked FROM Inventory WHERE shippedQuantity>=6 ORDER BY percentageOverstocked DESC")
head(overStock,10)
a<-lm(shippedQuantity ~ year, data = dataL)
summary(a)
df<-data.frame(year=c(2019))
predict(a, newdata = df)
overStock<-dbGetQuery(con2,"SELECT ps_partkey,ps_suppkey,ps_availqty,year,shippedQuantity,((ps_availqty-shippedQuantity)/shippedQuantity) as percentageOverstocked FROM Inventory WHERE shippedQuantity>=6 and year = '2018' ORDER BY percentageOverstocked DESC")
head(overStock,10)
print(paste("Estimated sales for 2019:",prediction2019))
prediction2019<-predict(a, newdata = df)
print(paste("Estimated sales for 2019:",prediction2019))
install.packages("mongolite")
library("mongolite")
con = mongo(collection = "region", db = "tpch", url = "mongodb://dbuser:dbuser@ds029847.mongolab.com:29847/tpch")
con$find('r_name')
con$find('r_regionkey')
con$find('{'r_regionkey':}')
con$count('r_regionkey')
con$count('{'r_regionkey':1}')
con$count
con$count()
con2 = mongo(collection = "nation", db = "tpch", url = "mongodb://dbuser:dbuser@ds029847.mongolab.com:29847/tpch")
con2$find('{"n_nationkey":<10}')
con2$find('{"n_nationkey":{"$lt" : 10}}')
con2$find('{"n_name","n_nationkey":{"$lt" : 10}}')
con2$find('{n_nationkey":{"$lt" : 10}}')
con2$find('{"n_nationkey":{"$lt" : 10}}')
con2 = mongo(collection = "nation", db = "tpch", url = "mongodb://dbuser:dbuser@ds029847.mongolab.com:29847/tpch")
con2$find(query = '{"n_nationkey":{"$lt" : 10}}', fields = '{"n_name" : true, "n_nationkey" = true}')
con2$find(query = '{"n_nationkey":{"$lt" : 10}}', fields = '{"n_name" : true, "n_nationkey" = true}')
con2$find(query = '{"n_nationkey":{"$lt" : 10}}', fields = '{"n_name" : true, "n_nationkey" : true}')
knitr::opts_chunk$set(echo = TRUE)
install.packages('tinytex', repos = "http://cran.us.r-project.org")
options(tinytex.verbose = TRUE)
GPA = 4.0
IQ = 110
salary = 85 + GPA*10 + IQ*0.07 + GPA*IQ*0.01
salary
install.packages("ISwR")
library("ISwR")
attach(secher)
lm(bwt ~ .-no)
attach(secher)
lm(bwt ~ .,-no)
attach(secher)
lm(bwt ~.,-no)
attach(secher)
lm(bwt ~.,-no, data = secher)
attach(secher)
lm(bwt ~.-no, data = secher)
reg = lm(bwt ~.-no, data = secher)
summary(reg)
reg = lm(bwt ~.-no, data = secher)
summary(reg)
cor(secher$bpd, secher$ad)
cor(secher$bpd, secher$bpd)
cor(secher$bpd, secher$ad)
cor(secher$bpd, secher$ad)
plot(secher$bpd, secher$ad)
cor(secher$bpd, secher$ad)
plot(secher$bpd, secher$ad)
bpd.lm = lm(bwt ~ bpd, data = secher)
ad.lm = lm(bwt ~ ad, data = secher)
summary(bpd.lm)
summary(ad.lm)
plot(reg)
install.packages("faraway")
library("faraway")
ptsd.lm = lm(ptsd ~ cpa*csa , data = sexab)
summary(ptsd.lm)
ptsd.lm = lm(ptsd ~ cpa*csa , data = sexab)
summary(ptsd.lm)
abline(a=ptsd.lm$coefficients[1], b=ptsd.lm$coefficients[2],col=1)
plot(sexab$cpa, sexab$ptsd, col = sexab$csa + 1)
abline(a=ptsd.lm$coefficients[1], b=ptsd.lm$coefficients[2],col=1)
# plot the line for males
manslope <- ptsd.lm$coefficients[2] + ptsd.lm$coefficients[4]
manint <-ptsd.lm$coefficients[1] + ptsd.lm$coefficients[3]
abline(a=manint, b=manslope,col=2)
plot(sexab$cpa, sexab$ptsd, col = c(1,2)[sexab$csa])
abline(a=ptsd.lm$coefficients[1], b=ptsd.lm$coefficients[2],col=1)
# plot the line for males
manslope <- ptsd.lm$coefficients[2] + ptsd.lm$coefficients[4]
manint <-ptsd.lm$coefficients[1] + ptsd.lm$coefficients[3]
abline(a=manint, b=manslope,col=2)
plot(sexab$cpa, sexab$ptsd, col = c(1,2)[sexab$csa])
abline(a=ptsd.lm$coefficients[1], b=ptsd.lm$coefficients[2],col=1)
# plot the line for males
manslope <- ptsd.lm$coefficients[2] + ptsd.lm$coefficients[4]
manint <-ptsd.lm$coefficients[1] + ptsd.lm$coefficients[3]
abline(a=manint, b=manslope,col=2)
plot(sexab$cpa, sexab$ptsd, col = c(1,2)[sexab$csa])
abline(a=multlm$coefficients[1], b=multlm$coefficients[2],col=1)
multlm = lm(ptsd ~ cpa+csa , data = sexab)
plot(sexab$cpa, sexab$ptsd, col = c(1,2)[sexab$csa])
abline(a=multlm$coefficients[1], b=multlm$coefficients[2],col=1)
# plot the line for males
manint <-multlm$coefficients[1] + multlm$coefficients[3]
abline(a=manint, b=multlm$coefficients[2],col=2)
install.packages("class")
library("class")
repW<-c(45,58,59,61,62,62,63,64,68,89)
actW<-c(45,59,57,62,63,64,62,63,71,87)
knn(repW, actW, k=2)
plot(reg)
install.packages("class")
library("class")
repW<-c(45,58,59,61,62,62,63,64,68,89)
actW<-c(45,59,57,62,63,64,62,63,71,87)
knn(repW, actW, actW, k=2)
#install.packages("class")
#library("class")
repW<-c(45,58,59,61,62,62,63,64,68,89)
actW<-c(45,59,57,62,63,64,62,63,71,87)
knn(repW, actW, as.factor(actW), k=2)
#install.packages("class")
#library("class")
repW<-c(45,58,59,61,62,62,63,64,68,89)
actW<-c(45,59,57,62,63,64,62,63,71,87)
plot(repW,actW)
#install.packages("class")
#library("class")
repW<-c(45,58,59,61,62,62,63,64,68,89)
actW<-c(45,59,57,62,63,64,62,63,71,87)
plot(repW,actW)
knitr::opts_chunk$set(echo = TRUE)
install.packages('tinytex', repos = "http://cran.us.r-project.org")
options(tinytex.verbose = TRUE)
install.packages("shiny")
runApp("barChart/")
install.packages("shiny")
library("shiny")
runApp("barChart/")
setwd("~/MDS_2019/data_550/labs/lab1")
#install.packages("shiny")
#library("shiny")
runApp("barChart/")
runApp("barChart/")
runApp("dotChart/")
runApp("barChart/")
runApp("scatterPlot/")
runApp("scatterPlot/")
runApp("scatterPlot/")
runApp("scatterPlot/")
runApp("scatterPlot/")
runApp("boxPlot/")
runApp("hist/")
runApp("boxPlot/")
runApp("hist/")
knitr::opts_chunk$set(echo = TRUE)
install.packages('tinytex', repos = "http://cran.us.r-project.org")
options(tinytex.verbose = TRUE)
install.packages("shiny")
library("shiny")
runApp("barChart/")
install.packages("shiny")
runApp("scatterPlot/")
runApp("scatterPlot/")
runApp("scatterPlot/")
runApp("scatterPlot/")
runApp("scatterPlot/")
runApp("scatterPlot/")
runApp("boxPlot/")
runApp("boxPlot/")
runApp("hist/")
